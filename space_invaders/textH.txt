#pragma once

#include <SFML/Graphics.hpp>
#include <iostream>
#include <array>

using namespace sf;

class Bullet {
private:
	bool destroyed;

	unsigned short x;
	unsigned short y;
public:
	Bullet(unsigned short i_x, unsigned short i_y) :
		destroyed(0),
		x(i_x),
		y(i_y)
	{ }

	unsigned short get_x() const { return x; }
	unsigned short get_y() const { return y; }

	IntRect get_hitbox() const;
};

class Player {
private:
	bool destroyed;

	unsigned short reload_timer;

	unsigned short x;
	unsigned short y;

	std::vector<Bullet> bullets;

	Sprite bullet_sprite;
	Sprite sprite;

	Texture bullet_texture;
	Texture texture;

	Animation explosion;
public:
	Player(unsigned short i_x, unsigned short i_y);

	void destroy();
	void draw(RenderWindow& i_window);
	void reset();
	void update();

	unsigned short get_x() const { return x; }
	unsigned short get_y() const { return y; }

	IntRect get_hitbox() const;
};

class Enemy {
private:
	bool dead;

	unsigned short x;
	unsigned short y;
public:
	Enemy(unsigned short i_x, unsigned short i_y) : dead(0), x(i_x), y(i_y)
	{}

	void shoot(std::vector<Bullet>& i_enemy_bullets);
	void die();
	void move();

	unsigned short get_x() const { return x; }
	unsigned short get_y() const { return y; }

	IntRect get_hitbox() const;
};

class Enemies {
private:
	unsigned short current_speed;
	unsigned short move_timer;

	std::vector<Bullet> enemy_bullets;
	std::vector<Enemy> enemies;

	Sprite enemy_bullet_sprite;
	Texture enemy_bullet_texture;
public:
	Enemies();

	bool reach_player(unsigned short i_player_y) const;
	void update();

	void draw(sf::RenderWindow& i_window);
	void reset(unsigned short i_level);
};

class Animation {
private:
	unsigned short animation_speed;
	unsigned short current_frame;
	unsigned short frame_size;

	Sprite sprite;
	Texture texture;
public:
	Animation(unsigned short i_animation_speed, unsigned short i_frame_size, const std::string& i_texture_location);

	bool change_current_frame();
	bool update();

	void draw(short i_x, short i_y, RenderWindow& i_window, const Color& i_color = Color(255, 255, 255));
	void reset();
};


